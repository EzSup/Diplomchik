@using Restaurant.Client.Services.Interfaces
@using Restaurant.Client.Contracts.Blogs
@inject IBlogsService blogsSerivce
@page "/blogDetails/{blogId:guid}"
<div class="Main-Content">
    <div class="Title">
        <div class="Title content">
            <h1>BlogDetails</h1>
        </div>
    </div>

    @if (blog != null)
    {
        <div class="Content-wrap flex-col">
            <div class="Container align-items-center w-75">
                <div class="Container-wrap flex-col">
                    <h2>@blog.Title</h2>
                    <h1>@blog.AuthorName</h1>
                </div>
                <div class="Container-wrap flex-row">
                    @if (!string.IsNullOrEmpty(blog.ImageLink))
                    {
                        <img src="@blog.ImageLink" alt="Blog Image" style="max-width: 600px">
                    }
                    <p class="card-text">@((MarkupString)blog.Content)</p>
                </div>
            </div>
        </div>
    }
</div>
@code {
    [Parameter]
    public Guid blogId { get; set; }
    BlogResponse blog = null!;

    protected override async Task OnInitializedAsync()
    {
        blog = await blogsSerivce.GetBlogById(blogId);
    }
}
