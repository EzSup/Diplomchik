@page "/test"
@using TinyMCE.Blazor
@using Restaurant.Client.Contracts.Blogs
@using Restaurant.Client.Services.Interfaces
@using DataJuggler.Blazor.FileUpload
@inject IBlogsService blogsService
@inject IPhotoService fileUploadService
@attribute [Authorize]
<style>
    .forms {
        width: 80%;
        max-width: 700px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin: 0 auto;
    }
</style>
<div class="Main-Content">
    <div class="forms">
        <h3>Articles</h3>
        <EditForm Model="request" OnValidSubmit="post">
            <DataAnnotationsValidator />
            <div class="form-group">
                <lable class="form-Label">Author Name</lable>
                <InputText @bind-Value="request.AuthorName" class="form-control"></InputText>
            </div>
            <div class="form-group">
                <lable class="form-Label">Title</lable>
                <InputText @bind-Value="request.Title" class="form-control"></InputText>
            </div>
            <div class="form-group">
                <lable class="form-Label">Image</lable>
                @* <FileUpload AllowedExtensions=".png;.jpg;.jpeg;.gif;"
                            CustomExtensionMessage="Only .png;.jpg;.jpeg;.gif; files are allowed." 
                            FilterByExtension = "true"
                            OnChange="HandleFileChange" class="form-control"></FileUpload> *@
                <InputFile  accept=".png,.jpg,.jpeg,.gif"  OnChange="HandleFileChange"  class="form-control" />
                @* <InputFile @bind-Value="file" class="form-control" /> *@
            </div>
            <button type="submit">Підтвердити</button>
            <ValidationSummary />
        </EditForm>
        <div class="form-group">
            <lable class="form-Label">Title</lable>
            <Editor Conf="editorConf" ApiKey="8zphuyb6qu417r6obeo20vs5guns8lzh7lbie76w1k8g7z19" @bind-Value="request.Content" />
        </div>
        <p>@result</p>

        @* <p  style="color: white;"> @value </p>
        @((MarkupString)value)   *@
    </div>
</div>
@code {
    BlogsCreateRequest request = new();
    string[] allowedExtenstions = new string[] { ".png", ".jpg", ".jpeg", ".gif" };
    string AllowedExtenstions = ".png;.jpg;.jpeg;.gif;";
    IBrowserFile file = null!;
    string result = "";


    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        file = e.File;
    }

    private async Task post()
    {
        var id = await blogsService.PostBlogAsync(file, request);
        result = id.ToString();
    }


    private Dictionary<string, object> editorConf = new Dictionary<string, object>{
       {"plugins", "advlist anchor autosave image link linkchecker lists media searchreplace table template visualblocks wordcount"},
     };

}